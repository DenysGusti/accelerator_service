version: '3.8'

volumes:
    geoserver_volume:
        external: false
    mongodb_volume:
        external: false
    minio_data:
        external: false

services:

  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    env_file:
      - ./.env.minio
  
  web_be:
    build:
      context: "${PROJECT_FOLDER:?err}"
      dockerfile: Dockerfile.dev
    volumes:
      - "${PROJECT_FOLDER:?err}:/app/"
    ports:
      - 8000:8000
    env_file:
      - ./.env.web.be
    # depends_on:
    #   - db
    #   - redisdb
    #   - celery_worker
  web_fe:
    build:
      context: "${WEBCLI_PROJECT_FOLDER:?err}"
      dockerfile: Dockerfile.dev
    volumes:
      - "${WEBCLI_PROJECT_FOLDER:?err}:/app/"
    ports:
      - 8080:8080
    env_file:
      - ./.env.web.fe
    depends_on:
      - web_be
  # geoserver:
  #   image: docker.osgeo.org/geoserver:2.22.0
  #   ports:
  #     - 5000:8080
  #   volumes:
  #     - geoserver_volume:/opt/geoserver_data
  #   # depends_on:
  #   #   - mongodb
  #   env_file:
  #     - ./.env.geoserver
  # mongodb:
  #   image: rapidfort/mongodb:5.0
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: rootpassword
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongodb_volume:/data/db
  # extract_netcdf: 
  #   build:
  #     context: "${EXTRACT_NETCDF_PROJECT_FOLDER:?err}"
  #     dockerfile: Dockerfile
  #   command: sleep infinity
  #   volumes:
  #     - "${EXTRACT_NETCDF_PROJECT_FOLDER:?err}:/app/"
  #     - geoserver_volume:/app/data/geoserver
  #   depends_on:
  #     - geoserver
    